@page "/login"

@inject DSV_Frontend.Services.IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject DSV_Frontend.Services.IRouteGuardService RouteGuardService
@inject AppState AppState

<div class="row">
    <div class="col-xl-5">
        <h3>Einloggen</h3>
        <RadzenCard>
            <RadzenTemplateForm Data=@("")>
                <RadzenLogin AllowResetPassword="false"
                             LoginText="Einloggen" UserText="Benutzername" PasswordText="Passwort" RegisterText="Registrieren"
                             UserRequired="Benutzername erforderlich" PasswordRequired="Passwort erforderlich"
                             RegisterMessageText="Sie haben noch keinen Account?"
                             Login=@(args => OnLogin(args))
                             Register=@(args => OnRegister())
                             Style="margin-bottom: 20px;" />
            </RadzenTemplateForm>
        </RadzenCard>
    </div>
</div>


@code {

    async Task OnLogin(LoginArgs args)
    {
        var userDataDto = new SharedDefinitions.DTOs.UserDataDTO();
        userDataDto.Username = args.Username;
        userDataDto.Password = args.Password;

        Console.WriteLine(this.RouteGuardService.UserToken);

        var response = await this.AuthenticationService.AuthenticateAsync(userDataDto);

        if (response.IsSuccess)
        {
            this.AppState.AuthenticationToken = response.Data;
            this.AppState.IsAuthenticated = true;
            this.AppState.Username = userDataDto.Username;
            this.AppState.RaiseStateChanged();
            this.NavigationManager.NavigateTo("/");
        }
    }

    void OnRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
