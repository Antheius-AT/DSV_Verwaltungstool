@page "/create/book"

@using DSV_Frontend.Services
@using DSV_Frontend.UI_Controls.Display
@using DSV_Frontend.UI_Controls.FormControls
@using DSV_Frontend.UI_Controls.FormControls.Buttons
@using SharedDefinitions.DTOs

@inject IRouteGuardService RouteGuardService
@inject NavigationManager NavManager
@inject IDatabaseAssetSubmitService SubmitService

@if (!this.isAllowed)
{
    <FPLoadPage></FPLoadPage>
}
else
{
    <EditForm EditContext="@this.editContext">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <table class="table table-striped table-bordered table-hover">
            <tbody>
                <tr>
                    <th>Autor</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.Author"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.Author"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Titel</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.Title"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.Title"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Untertitel</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.SubLevelTitle"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.SubLevelTitle"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Verlag</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.Editor"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.Editor"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Herausgeber</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.Publisher"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.Publisher"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>ISBN</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.ISBN"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.ISBN"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Seitenanzahl</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.Pages"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.Pages"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Alte Signatur</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.PreviousStorageLocation"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.PreviousStorageLocation"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Erscheinungsort</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.PublicationLocation"></ValidationMessage>
                        <FPInputText @bind-Value="this.dataModel.PublicationLocation"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Erscheinungsjahr</th>
                    <td>
                        <ValidationMessage For="() => this.dataModel.PublicationYear"></ValidationMessage>
                        <FPInputInteger @bind-Value="this.dataModel.PublicationYear"></FPInputInteger>
                    </td>
                </tr>
                <tr>
                    <th>Zusätzliche Kommentare</th>
                    <td>
                        <FPInputText @bind-Value="this.dataModel.AdditionalComments"></FPInputText>
                    </td>
                </tr>
                <tr>
                    <th>Bild hochladen</th>
                    <td>
                        <RadzenFileInput @bind-Value="this.dataModel.ImageDataBase64Encoded" ChooseText="Datei auswählen" TValue="string"></RadzenFileInput>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="mb-3">
            <FPSaveButton Text="Speichern" OnClick="@(async () => await this.SaveModelAsync())"></FPSaveButton>
        </div>
    </EditForm>
}

@code {
    private EventCallback<ChangeEventArgs> FileChangedCallback;
    private bool isAllowed;
    private BookDataDTO dataModel;
    private EditContext editContext;

    protected override async Task OnInitializedAsync()
    {
        this.isAllowed = false;

        if (!await this.RouteGuardService.VerifySecurityToken())
        {
            this.NavManager.NavigateTo("/login");
        }

        this.dataModel = new BookDataDTO();
        this.editContext = new EditContext(this.dataModel);

        this.isAllowed = true;
        await base.OnInitializedAsync();
    }

    private async Task SaveModelAsync()
    {
        if (this.editContext.Validate())
        {
            var success = await this.SubmitService.SubmitBookAsync(this.dataModel);

            if (success)
            {
                this.NavManager.NavigateTo("/success");
            }
            else
            {
                this.NavManager.NavigateTo("/error");
            }
        }
    }
}