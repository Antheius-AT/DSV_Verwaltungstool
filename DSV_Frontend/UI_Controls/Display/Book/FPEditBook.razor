@inherits ComponentBase

@using DSV_Frontend.Services
@using DSV_Frontend.UI_Controls.FormControls
@using DSV_Frontend.UI_Controls.FormControls.Buttons
@using SharedDefinitions.DTOs

@inject NavigationManager NavManager
@inject IDatabaseAssetSubmitService SubmitService


<EditForm EditContext="@this.editContext">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <table class="table table-striped table-bordered table-hover">
        <tbody>
            <tr>
                <th>Autor</th>
                <td>
                    <ValidationMessage For="() => this.BookData.Author"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.Author"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Titel</th>
                <td>
                    <ValidationMessage For="() => this.BookData.Title"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.Title"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Untertitel</th>
                <td>
                    <ValidationMessage For="() => this.BookData.SubLevelTitle"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.SubLevelTitle"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Verlag</th>
                <td>
                    <ValidationMessage For="() => this.BookData.Editor"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.Editor"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Herausgeber</th>
                <td>
                    <ValidationMessage For="() => this.BookData.Publisher"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.Publisher"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>ISBN</th>
                <td>
                    <ValidationMessage For="() => this.BookData.ISBN"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.ISBN"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Seitenanzahl</th>
                <td>
                    <ValidationMessage For="() => this.BookData.Pages"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.Pages"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Alte Signatur</th>
                <td>
                    <ValidationMessage For="() => this.BookData.PreviousStorageLocation"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.PreviousStorageLocation"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Erscheinungsort</th>
                <td>
                    <ValidationMessage For="() => this.BookData.PublicationLocation"></ValidationMessage>
                    <FPInputText @bind-Value="this.BookData.PublicationLocation"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Erscheinungsjahr</th>
                <td>
                    <ValidationMessage For="() => this.BookData.PublicationYear"></ValidationMessage>
                    <FPInputInteger @bind-Value="this.BookData.PublicationYear"></FPInputInteger>
                </td>
            </tr>
            <tr>
                <th>Zusätzliche Kommentare</th>
                <td>
                    <FPInputText @bind-Value="this.BookData.AdditionalComments"></FPInputText>
                </td>
            </tr>
            <tr>
                <th>Bild hochladen</th>
                <td>
                    <RadzenFileInput @bind-Value="this.BookData.ImageDataBase64Encoded" ChooseText="Datei auswählen" TValue="string"></RadzenFileInput>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="mb-3">
        <DSV_Frontend.UI_Controls.FormControls.Buttons.FPCancelButton Text="Abbrechen" OnClick="@(async () => await this.OnCancel.InvokeAsync())"></DSV_Frontend.UI_Controls.FormControls.Buttons.FPCancelButton>
        <DSV_Frontend.UI_Controls.FormControls.Buttons.FPSaveButton Text="Speichern" OnClick="@(async () => await this.SaveModelAsync())"></DSV_Frontend.UI_Controls.FormControls.Buttons.FPSaveButton>
    </div>
</EditForm>


@code {
    private EditContext editContext;

    [Parameter]
    public BookDataDTO BookData { get; set; }

    [Parameter]
    public EventCallback OnAfterSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.editContext = new EditContext(this.BookData);

        await base.OnInitializedAsync();
    }

    private async Task SaveModelAsync()
    {
        if (this.editContext.Validate())
        {
            var success = await this.SubmitService.SubmitModifiedBookAsync(this.BookData.AssetID, this.BookData);

            
            if (this.OnAfterSave.HasDelegate)
            {
                await this.OnAfterSave.InvokeAsync();
            }
        }
    }
}